// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WellCarePharmacyWebapi.Models.Context;

#nullable disable

namespace WellCarePharmacyWebapi.Migrations
{
    [DbContext(typeof(WellCareDC))]
    partial class WellCareDCModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WellCarePharmacyWebapi.Models.Entities.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UsersId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 3,
                            Quantity = 3,
                            TotalPrice = 345m,
                            UsersId = 1
                        });
                });

            modelBuilder.Entity("WellCarePharmacyWebapi.Models.Entities.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripition")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Descripition = "soap made with charcoal",
                            Discount = 45m,
                            ImageUrl = "iwyer",
                            Price = 0f,
                            ProductName = "Active Charcoal Soap",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 8,
                            Descripition = "soap made with charcoal",
                            Discount = 45m,
                            ImageUrl = "iwyer",
                            Price = 0f,
                            ProductName = "Active Soap",
                            Status = "NotAvailable"
                        },
                        new
                        {
                            Id = 3,
                            Descripition = "soap made with charcoal",
                            Discount = 45m,
                            ImageUrl = "iwyer",
                            Price = 0f,
                            ProductName = "Active Charcoal Soap",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 4,
                            Descripition = "soap made with charcoal",
                            Discount = 45m,
                            ImageUrl = "iwyer",
                            Price = 0f,
                            ProductName = "Active Soap",
                            Status = "NotAvailable"
                        },
                        new
                        {
                            Id = 5,
                            Descripition = "soap made with charcoal",
                            Discount = 45m,
                            ImageUrl = "iwyer",
                            Price = 0f,
                            ProductName = "Active Charcoal Soap",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 6,
                            Descripition = "soap made with charcoal",
                            Discount = 45m,
                            ImageUrl = "iwyer",
                            Price = 0f,
                            ProductName = "Active Soap",
                            Status = "NotAvailable"
                        });
                });

            modelBuilder.Entity("WellCarePharmacyWebapi.Models.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("WellCarePharmacyWebapi.Models.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "siva@gmail.com",
                            Name = "siva",
                            Password = "12345",
                            PhoneNumber = 99,
                            RegisteredOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "siva@gmail.com",
                            Name = "siva",
                            Password = "12345",
                            PhoneNumber = 99,
                            RegisteredOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("WellCarePharmacyWebapi.Models.Entities.Orders", b =>
                {
                    b.HasOne("WellCarePharmacyWebapi.Models.Entities.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WellCarePharmacyWebapi.Models.Entities.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WellCarePharmacyWebapi.Models.Entities.Users", b =>
                {
                    b.HasOne("WellCarePharmacyWebapi.Models.Entities.Role", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("WellCarePharmacyWebapi.Models.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
